name: Continuous Integration

on:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  ci:
    name: CI / Node ${{ matrix.node }}
    strategy:
      matrix:
        node: ["16"]
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.x.x

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: pnpm

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Format
        run: pnpm run format

      - name: Lint
        run: pnpm run lint

      - name: Build Packages
        run: pnpm run build

      - uses: supabase/setup-cli@v1
        with:
          version: 1.5.1

      - name: Start Supabase
        run: SUPABASE_INTERNAL_IMAGE_REGISTRY=docker.io supabase start

      - name: Run Tests
        run: pnpm run test

      - name: Upload postgrest-filter coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./packages/postgrest-filter/coverage/coverage-final.json
          flags: postgrest-filter 
          fail_ci_if_error: true 

      - name: Upload postgrest-mutate coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./packages/postgrest-mutate/coverage/coverage-final.json
          flags: postgrest-mutate 
          fail_ci_if_error: true 

      - name: Upload postgrest-swr coverage 
        uses: codecov/codecov-action@v3
        with:
          files: ./packages/postgrest-swr/coverage/coverage-final.json
          flags: postgrest-swr 
          fail_ci_if_error: true 
     
      - name: Upload postgrest-fetcher coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./packages/postgrest-fetcher/coverage/coverage-final.json
          flags: postgrest-fetcher 
          fail_ci_if_error: true 
            